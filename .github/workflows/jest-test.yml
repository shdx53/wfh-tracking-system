name: Run Jest Tests

# Environment variables used by Vercel for deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

# Trigger the workflow on pushes and pull requests to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Adjust the version based on your project

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run Jest tests
      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test # This ensures the deploy job will only run if the test job completes successfully
    steps:
      # Step 1: Checkout the code again
      - uses: actions/checkout@v3

      # Step 2: Install the Vercel CLI globally
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Step 3: Pull the Vercel environment information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Step 4: Build the project locally using Vercel
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Step 5: Deploy the prebuilt artifacts to Vercel
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}